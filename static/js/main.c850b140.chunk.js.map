{"version":3,"sources":["../public sync /^/.//.*/.jpeg$","../public/book1.jpeg","../public/book2.jpeg","../public/book3.jpeg","../public/book4.jpeg","../public/book5.jpeg","components/ListItem.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ListItem","book","handleAddToCart","handleRemoveFromCart","shoppingCartValue","baseBookFare","image","require","Fragment","alt","tite","src","default","className","title","author","parseInt","toFixed","disabled","onClick","readOnly","defaultValue","value","defaultProps","BookStore","props","baseFare","state","shoppingCart","amount","bind","handleTotalBill","this","setState","cloneDeep","tempShoppingCart","totalAmount","getDiscount","count","length","differentBooksCount","books","totalBooksCount","sum","values","totalDiscount","bookId","get","find","React","Component","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.c850b140.chunk.js","sourcesContent":["var map = {\n\t\"./book1.jpeg\": 185,\n\t\"./book2.jpeg\": 186,\n\t\"./book3.jpeg\": 187,\n\t\"./book4.jpeg\": 188,\n\t\"./book5.jpeg\": 189\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 184;","export default __webpack_public_path__ + \"static/media/book1.e82c5358.jpeg\";","export default __webpack_public_path__ + \"static/media/book2.f25f58cd.jpeg\";","export default __webpack_public_path__ + \"static/media/book3.548d8ce1.jpeg\";","export default __webpack_public_path__ + \"static/media/book4.5f2aabff.jpeg\";","export default __webpack_public_path__ + \"static/media/book5.59bcf83f.jpeg\";","// List item element represents a single book element in the bookshop \n\nimport React from \"react\";\nimport PropTypes from 'prop-types'\nimport { FiPlusSquare, FiMinusSquare } from 'react-icons/fi'\n\nfunction ListItem({\n    book, // selected book to create UI element\n    handleAddToCart, // handler for button to add book to cart\n    handleRemoveFromCart, // handler for button to remove book from cart\n    shoppingCartValue, // shoppingcart count \n    baseBookFare // book fare same for all books for this case\n}) {\n    const image = require('./../../public/' + book.id + '.jpeg');\n    return (\n        <React.Fragment>\n            <img alt={book.tite} src={image.default} />\n            <div className=\"bookStore-list-item-description\">\n                <div>\n                    <p>{book.title}</p>\n                    <p className=\"subText\">By {book.author}</p>\n                    <p>$ {parseInt(baseBookFare).toFixed(2)}</p>\n                </div>\n                <div className=\"bookStore-list-item-actionButtons\">\n                    <button id={`${book.id}-remove`} className=\"bookStore-list-item-actionButtons-remove\" disabled={!shoppingCartValue} onClick={() => { handleRemoveFromCart(book.id) }}><FiMinusSquare /></button>\n                    <input readOnly defaultValue={0} value={shoppingCartValue} />\n                    <button id={`${book.id}-add`} className=\"bookStore-list-item-actionButtons-add\" onClick={() => { handleAddToCart(book.id) }}><FiPlusSquare /></button>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nListItem.propTypes = {\n    book: PropTypes.shape({}).isRequired,\n    handleAddToCart: PropTypes.func.isRequired,\n    handleRemoveFromCart: PropTypes.func.isRequired,\n    shoppingCartValue: PropTypes.number,\n    baseBookFare: PropTypes.number\n};\n\nListItem.defaultProps = {\n    shoppingCartValue: 0,\n    baseBookFare: 0\n};\n\nexport default ListItem","/*\nTo try and encourage more sales of different books from a popular 5 book series, a bookshop has decided to offer discounts on multiple book \npurchases. One copy of any of the five books costs $8. If, however, you buy two different books, you get a 5% discount on those two books. \nIf you buy 3 different books, you get a 10% discount. If you buy 4 different books, you get a 20% discount. \nIf you buy all 5, you get a 25% discount.\n\nNote: that if you buy four books, of which 3 are different titles, you get a 10% discount on the 3 that form part of a set, but the fourth book \nstill costs $8. Your mission is to write a piece of code to calculate the price of any conceivable shopping basket (containing only books of \nthe same series), giving as big a discount as possible.\nFor example, how much does this basket of books cost?\n2 copies of the first book 2 copies of the second book 2 copies of the third book 1 copy of the fourth book 1 copy of the fifth book\n*/\n\nimport React from 'react'\nimport map from 'lodash/map'\nimport find from 'lodash/find'\nimport get from 'lodash/get'\nimport cloneDeep from 'lodash/cloneDeep'\nimport values from 'lodash/values'\nimport sum from 'lodash/sum'\nimport PropTypes from 'prop-types'\n\nimport ListItem from './components/ListItem'\n\nclass BookStore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.baseFare = 8; // Base fare for each book (All books have same fare for this case)\n    this.state = {\n      shoppingCart: {}, // to maintain books added by guest\n      amount: 0, // final amount of cart\n    }\n    this.handleAddToCart = this.handleAddToCart.bind(this)\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this)\n    this.handleTotalBill = this.handleTotalBill.bind(this)\n  }\n\n  // Method to add a book to shopping cart\n  handleAddToCart(id) {\n    let shoppingCart = this.state.shoppingCart\n    if (!shoppingCart[id]) {\n      shoppingCart[id] = 1\n    } else {\n      shoppingCart[id]++\n    }\n    this.setState({\n      shoppingCart\n    }, () => {\n      this.handleTotalBill()\n    })\n  }\n\n  // Method to remove a book from shopping cart\n  handleRemoveFromCart(id) {\n    let shoppingCart = cloneDeep(this.state.shoppingCart)\n    shoppingCart[id]--\n    if (shoppingCart[id] === 0) {\n      delete (shoppingCart[id])\n    }\n    this.setState({\n      shoppingCart\n    }, () => {\n      this.handleTotalBill()\n    })\n  }\n\n  handleTotalBill() {\n    let { amount = 0 } = this.state\n    let tempShoppingCart = cloneDeep(this.state.shoppingCart)\n    let totalAmount = 0\n    // Discount based on unique books count\n    let getDiscount = function (count) {\n      switch (count) {\n        case 2:\n          return 5;\n        case 3:\n          return 10;\n        case 4:\n          return 20;\n        case 5:\n          return 25;\n        default:\n          break;\n      }\n    }\n    /* \n      Create sets of unique books to maximum discount calculation. \n      For example if cart has AABBCDE,\n      first calculate price for ABCDE - 25% discount\n      then price for AB - 5% discount\n    */\n    while (Object.keys(tempShoppingCart).length > 0) {\n      let differentBooksCount = 0\n\n      for (let book in tempShoppingCart) {\n        differentBooksCount++\n        tempShoppingCart[book]--\n        if (tempShoppingCart[book] === 0) {\n          delete (tempShoppingCart[book])\n        }\n      }\n      amount = this.baseFare * differentBooksCount\n      if (differentBooksCount > 1) {\n        amount -= (getDiscount(differentBooksCount) / 100 * amount)\n      }\n      totalAmount += amount\n    }\n    this.setState({\n      amount: totalAmount\n    })\n  }\n\n  render() {\n    let { shoppingCart, amount } = this.state\n    let { books } = this.props\n    let totalBooksCount = sum(values(shoppingCart))\n    let totalDiscount = this.baseFare * totalBooksCount - amount\n    return (\n      <div className=\"bookStore\">\n        <h1>Book Shop</h1>\n        <div className=\"bookStore-container\">\n          <div className=\"bookStore-list\">\n            {\n              // Map through books master data to display book item\n              map(books, (book) => {\n                return (\n                  <div className=\"bookStore-list-item\" key={book.id}>\n                    <ListItem\n                      book={book}\n                      handleAddToCart={this.handleAddToCart}\n                      handleRemoveFromCart={this.handleRemoveFromCart}\n                      shoppingCartValue={shoppingCart[book.id]}\n                      baseBookFare={this.baseFare}\n                    />\n                  </div>\n                )\n              })\n            }\n          </div>\n          <div className=\"bookStore-shoppingCart\">\n            {\n              Object.keys(shoppingCart).length > 0 ? <React.Fragment>\n                <h3>SHOPPING CART</h3>\n                {\n                  map(shoppingCart, (count, bookId) => {\n                    return (\n                      <div key={bookId} className=\"bookStore-shoppingCart-item\">\n                        <div>{get(find(books, ['id', bookId]), 'title', '')}</div>\n                        <div>{count}</div>\n                      </div>\n                    )\n                  })\n                }\n                <div className=\"bookStore-totalBill\">\n                  {\n                    // Show discount and total amount fields only if any discount is applied\n                    totalDiscount > 0 && <React.Fragment>\n                      <div className=\"bookStore-totalBill-item\">\n                        <div>Total Amount:</div>\n                        <div>$ {(this.baseFare * totalBooksCount).toFixed(2)}</div>\n                      </div>\n                      <div className=\"bookStore-totalBill-item\">\n                        <div>Discount:</div>\n                        <div>- $ {totalDiscount.toFixed(2)}</div>\n                      </div>\n                    </React.Fragment>\n                  }\n                  <div className=\"bookStore-totalBill-item finalAmount\">\n                    <div>Final Amount:</div>\n                    <div>$ {amount.toFixed(2)}</div>\n                  </div>\n                </div>\n              </React.Fragment> :\n                // Displayed when cart is empty\n                <div>Your cart is empty!</div>\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nBookStore.propTypes = {\n  books: PropTypes.arrayOf(PropTypes.shape({})).isRequired\n};\n\nexport default BookStore\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\n// Books master data\nconst books = [\n  {\n    id: 'book1',\n    title: 'Harry Potter and the Sorcerers Stone',\n    author: 'J.K. Rowling'\n  },\n  {\n    id: 'book2',\n    title: 'Harry Potter and the Chamber of Secrets',\n    author: 'J.K. Rowling'\n  },\n  {\n    id: 'book3',\n    title: 'Harry Potter and the Prisoner of Azkaban',\n    author: 'J.K. Rowling'\n  },\n  {\n    id: 'book4',\n    title: 'Harry Potter and the Goblet of Fire',\n    author: 'J.K. Rowling'\n  },\n  {\n    id: 'book5',\n    title: 'Harry Potter and the Order of the Phoenix',\n    author: 'J.K. Rowling'\n  },\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App books={books} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}