{"version":3,"sources":["App.js","index.js"],"names":["BookStore","props","books","id","title","state","shoppingCart","amount","handleAddToCart","bind","handleRemoveFromCart","handleTotalBill","event","target","substr","indexOf","this","setState","cloneDeep","tempShoppingCart","totalAmount","getDiscount","count","Object","keys","length","differentBooksCount","book","className","map","onClick","disabled","bookId","get","find","React","Component","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"oRAgKeA,E,kDA5Ib,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX,CACEC,GAAI,QACJC,MAAO,wCAET,CACED,GAAI,QACJC,MAAO,2CAET,CACED,GAAI,QACJC,MAAO,4CAET,CACED,GAAI,QACJC,MAAO,uCAET,CACED,GAAI,QACJC,MAAO,8CAGX,EAAKC,MAAQ,CACXC,aAAc,GACdC,OAAQ,GAEV,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBA9BN,E,mDAiCnB,SAAgBG,GAAQ,IAAD,OACfT,EAAOS,EAAMC,OAAbV,GACNA,EAAKA,EAAGW,OAAO,EAAGX,EAAGY,QAAQ,MAC7B,IAAIT,EAAeU,KAAKX,MAAMC,aACzBA,EAAaH,GAGhBG,EAAaH,KAFbG,EAAaH,GAAM,EAIrBa,KAAKC,SAAS,CACZX,iBACC,WACD,EAAKK,uB,kCAIT,SAAqBC,GAAQ,IAAD,OACpBT,EAAOS,EAAMC,OAAbV,GACNA,EAAKA,EAAGW,OAAO,EAAGX,EAAGY,QAAQ,MAC7B,IAAIT,EAAeY,IAAUF,KAAKX,MAAMC,cACxCA,EAAaH,KACY,IAArBG,EAAaH,WACPG,EAAaH,GAEvBa,KAAKC,SAAS,CACZX,iBACC,WACD,EAAKK,uB,6BAIT,WAkBE,IAjBA,MAAqBK,KAAKX,MAApBE,cAAN,MAAe,EAAf,EACIY,EAAmBD,IAAUF,KAAKX,MAAMC,cACxCc,EAAc,EACdC,EAAc,SAAUC,GAC1B,OAAQA,GACN,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,GACT,KAAK,EACH,OAAO,GACT,KAAK,EACH,OAAO,GACT,QACE,OAAO,IAGNC,OAAOC,KAAKL,GAAkBM,OAAS,GAAG,CAC/C,IAAIC,EAAsB,EAC1B,IAAK,IAAIC,KAAQR,EACfO,IACAP,EAAiBQ,KACc,IAA3BR,EAAiBQ,WACXR,EAAiBQ,GAG7BpB,EAAS,EAAImB,EACTA,EAAsB,IACxBnB,GAAWc,EAAYK,GAAuB,IAAMnB,GAEtDa,GAAeb,EAEjBS,KAAKC,SAAS,CACZV,OAAQa,M,oBAIZ,WAAU,IAAD,OACP,EAA+BJ,KAAKX,MAA9BC,EAAN,EAAMA,aAAcC,EAApB,EAAoBA,OACpB,OACE,sBAAKqB,UAAU,YAAf,UACE,mDACA,qBAAKA,UAAU,iBAAf,SAEIC,IAAIb,KAAKd,OAAO,SAACyB,GACf,OACE,sBAAKC,UAAU,sBAAf,UACE,8BAAMD,EAAKvB,QACX,sBAAKwB,UAAU,oCAAf,UACE,wBAAQzB,GAAE,UAAKwB,EAAKxB,GAAV,QAAoB2B,QAAS,EAAKtB,gBAA5C,yBACA,wBAAQL,GAAE,UAAKwB,EAAKxB,GAAV,WAAuB4B,UAAWzB,EAAaqB,EAAKxB,IAAK2B,QAAS,EAAKpB,qBAAjF,mCAJsCiB,EAAKxB,SAWvD,sBAAKyB,UAAU,yBAAf,UACE,8CAEEC,IAAIvB,GAAc,SAACgB,EAAOU,GACxB,OACE,gCAAmBC,IAAIC,IAAK,EAAKhC,MAAO,CAAC,KAAM8B,IAAU,QAAS,IAAlE,IAAwEV,IAA9DU,SAKlB,qBAAKJ,UAAU,sBAAf,SACE,kDAAqBrB,c,GAtIP4B,IAAMC,WCd9BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f06a7f7d.chunk.js","sourcesContent":["import React from 'react'\nimport map from 'lodash/map'\nimport find from 'lodash/find'\nimport get from 'lodash/get'\nimport cloneDeep from 'lodash/cloneDeep'\n\n/*\nTo try and encourage more sales of different books from a popular 5 book series, a bookshop has decided to offer discounts on multiple book \npurchases. One copy of any of the five books costs $8. If, however, you buy two different books, you get a 5% discount on those two books. \nIf you buy 3 different books, you get a 10% discount. If you buy 4 different books, you get a 20% discount. \nIf you buy all 5, you get a 25% discount.\n\nNote: that if you buy four books, of which 3 are different titles, you get a 10% discount on the 3 that form part of a set, but the fourth book \nstill costs $8. Your mission is to write a piece of code to calculate the price of any conceivable shopping basket (containing only books of \nthe same series), giving as big a discount as possible.\nFor example, how much does this basket of books cost?\n2 copies of the first book 2 copies of the second book 2 copies of the third book 1 copy of the fourth book 1 copy of the fifth book\n*/\n\nclass BookStore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.books = [\n      {\n        id: 'book1',\n        title: 'Harry Potter and the Sorcerers Stone'\n      },\n      {\n        id: 'book2',\n        title: 'Harry Potter and the Chamber of Secrets'\n      },\n      {\n        id: 'book3',\n        title: 'Harry Potter and the Prisoner of Azkaban'\n      },\n      {\n        id: 'book4',\n        title: 'Harry Potter and the Goblet of Fire'\n      },\n      {\n        id: 'book5',\n        title: 'Harry Potter and the Order of the Phoenix'\n      },\n    ]\n    this.state = {\n      shoppingCart: {},\n      amount: 0\n    }\n    this.handleAddToCart = this.handleAddToCart.bind(this)\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this)\n    this.handleTotalBill = this.handleTotalBill.bind(this)\n  }\n\n  handleAddToCart(event) {\n    let { id } = event.target\n    id = id.substr(0, id.indexOf('-'))\n    let shoppingCart = this.state.shoppingCart\n    if (!shoppingCart[id]) {\n      shoppingCart[id] = 1\n    } else {\n      shoppingCart[id]++\n    }\n    this.setState({\n      shoppingCart\n    }, () => {\n      this.handleTotalBill()\n    })\n  }\n\n  handleRemoveFromCart(event) {\n    let { id } = event.target\n    id = id.substr(0, id.indexOf('-'))\n    let shoppingCart = cloneDeep(this.state.shoppingCart)\n    shoppingCart[id]--\n    if (shoppingCart[id] === 0) {\n      delete (shoppingCart[id])\n    }\n    this.setState({\n      shoppingCart\n    }, () => {\n      this.handleTotalBill()\n    })\n  }\n\n  handleTotalBill() {\n    let { amount = 0 } = this.state\n    let tempShoppingCart = cloneDeep(this.state.shoppingCart)\n    let totalAmount = 0\n    let getDiscount = function (count) {\n      switch (count) {\n        case 2:\n          return 5;\n        case 3:\n          return 10;\n        case 4:\n          return 20;\n        case 5:\n          return 25;\n        default:\n          return 0;\n      }\n    }\n    while (Object.keys(tempShoppingCart).length > 0) {\n      let differentBooksCount = 0\n      for (let book in tempShoppingCart) {\n        differentBooksCount++\n        tempShoppingCart[book]--\n        if (tempShoppingCart[book] === 0) {\n          delete (tempShoppingCart[book])\n        }\n      }\n      amount = 8 * differentBooksCount\n      if (differentBooksCount > 1) {\n        amount -= (getDiscount(differentBooksCount) / 100 * amount)\n      }\n      totalAmount += amount\n    }\n    this.setState({\n      amount: totalAmount\n    })\n  }\n\n  render() {\n    let { shoppingCart, amount } = this.state\n    return (\n      <div className=\"bookStore\">\n        <h1>Purva's Book Shop</h1>\n        <div className=\"bookStore-list\">\n          {\n            map(this.books, (book) => {\n              return (\n                <div className=\"bookStore-list-item\" key={book.id}>\n                  <div>{book.title}</div>\n                  <div className=\"bookStore-list-item-actionButtons\">\n                    <button id={`${book.id}-add`} onClick={this.handleAddToCart}>Add to Cart</button>\n                    <button id={`${book.id}-remove`} disabled={!shoppingCart[book.id]} onClick={this.handleRemoveFromCart}>Remove from Cart</button>\n                  </div>\n                </div>\n              )\n            })\n          }\n        </div>\n        <div className=\"bookStore-shoppingCart\">\n          <p>You selected:</p>\n          {\n            map(shoppingCart, (count, bookId) => {\n              return (\n                <div key={bookId}>{get(find(this.books, ['id', bookId]), 'title', '')} {count}</div>\n              )\n            })\n          }\n        </div>\n        <div className=\"bookStore-totalBill\">\n          <p>Your total bill: {amount}</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default BookStore\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}