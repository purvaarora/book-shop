{"version":3,"sources":["../public sync /^/.//.*/.jpeg$","../public/book1.jpeg","../public/book2.jpeg","../public/book3.jpeg","../public/book4.jpeg","../public/book5.jpeg","components/ListItem.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ListItem","book","handleAddToCart","handleRemoveFromCart","shoppingCartValue","image","require","Fragment","alt","tite","src","default","className","title","author","parseInt","amount","toFixed","onClick","readOnly","defaultValue","value","disabled","BookStore","props","books","baseFare","state","shoppingCart","bind","handleTotalBill","this","setState","cloneDeep","tempShoppingCart","totalAmount","getDiscount","count","length","differentBooksCount","totalBooksCount","sum","values","totalDiscount","bookId","get","find","React","Component","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.7afadee0.chunk.js","sourcesContent":["var map = {\n\t\"./book1.jpeg\": 185,\n\t\"./book2.jpeg\": 186,\n\t\"./book3.jpeg\": 187,\n\t\"./book4.jpeg\": 188,\n\t\"./book5.jpeg\": 189\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 184;","export default __webpack_public_path__ + \"static/media/book1.e82c5358.jpeg\";","export default __webpack_public_path__ + \"static/media/book2.f25f58cd.jpeg\";","export default __webpack_public_path__ + \"static/media/book3.548d8ce1.jpeg\";","export default __webpack_public_path__ + \"static/media/book4.5f2aabff.jpeg\";","export default __webpack_public_path__ + \"static/media/book5.59bcf83f.jpeg\";","import React from \"react\";\nimport { RiShoppingCart2Line, RiDeleteBin2Line } from 'react-icons/ri'\n\nexport function ListItem({ book, handleAddToCart, handleRemoveFromCart, shoppingCartValue = 0 }) {\n    const image = require('./../../public/' + book.id + '.jpeg');\n    return (\n        <React.Fragment>\n            <img alt={book.tite} src={image.default} />\n            <div className=\"bookStore-list-item-description\">\n                <div>\n                    <p>{book.title}</p>\n                    <p className=\"subText\">By {book.author}</p>\n                    <p>$ {parseInt(book.amount).toFixed(2)}</p>\n                </div>\n                <div className=\"bookStore-list-item-actionButtons\">\n                    <button id={`${book.id}-add`} onClick={() => { handleAddToCart(book.id) }}><RiShoppingCart2Line /></button>\n                    <input readOnly defaultValue={0} value={shoppingCartValue} />\n                    <button id={`${book.id}-remove`} disabled={!shoppingCartValue} onClick={() => { handleRemoveFromCart(book.id) }}><RiDeleteBin2Line /></button>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}","import React from 'react'\nimport map from 'lodash/map'\nimport find from 'lodash/find'\nimport get from 'lodash/get'\nimport cloneDeep from 'lodash/cloneDeep'\nimport values from 'lodash/values'\nimport sum from 'lodash/sum'\n\nimport { ListItem } from './components/ListItem'\n\n/*\nTo try and encourage more sales of different books from a popular 5 book series, a bookshop has decided to offer discounts on multiple book \npurchases. One copy of any of the five books costs $8. If, however, you buy two different books, you get a 5% discount on those two books. \nIf you buy 3 different books, you get a 10% discount. If you buy 4 different books, you get a 20% discount. \nIf you buy all 5, you get a 25% discount.\n\nNote: that if you buy four books, of which 3 are different titles, you get a 10% discount on the 3 that form part of a set, but the fourth book \nstill costs $8. Your mission is to write a piece of code to calculate the price of any conceivable shopping basket (containing only books of \nthe same series), giving as big a discount as possible.\nFor example, how much does this basket of books cost?\n2 copies of the first book 2 copies of the second book 2 copies of the third book 1 copy of the fourth book 1 copy of the fifth book\n*/\n\nclass BookStore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.books = [\n      {\n        id: 'book1',\n        amount: 8,\n        title: 'Harry Potter and the Sorcerers Stone',\n        author: 'J.K. Rowling'\n      },\n      {\n        id: 'book2',\n        amount: 8,\n        title: 'Harry Potter and the Chamber of Secrets',\n        author: 'J.K. Rowling'\n      },\n      {\n        id: 'book3',\n        amount: 8,\n        title: 'Harry Potter and the Prisoner of Azkaban',\n        author: 'J.K. Rowling'\n      },\n      {\n        id: 'book4',\n        amount: 8,\n        title: 'Harry Potter and the Goblet of Fire',\n        author: 'J.K. Rowling'\n      },\n      {\n        id: 'book5',\n        amount: 8,\n        title: 'Harry Potter and the Order of the Phoenix',\n        author: 'J.K. Rowling'\n      },\n    ];\n    this.baseFare = 8;\n    this.state = {\n      shoppingCart: {},\n      amount: 0,\n    }\n    this.handleAddToCart = this.handleAddToCart.bind(this)\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this)\n    this.handleTotalBill = this.handleTotalBill.bind(this)\n  }\n\n  handleAddToCart(id) {\n    let shoppingCart = this.state.shoppingCart\n    if (!shoppingCart[id]) {\n      shoppingCart[id] = 1\n    } else {\n      shoppingCart[id]++\n    }\n    this.setState({\n      shoppingCart\n    }, () => {\n      this.handleTotalBill()\n    })\n  }\n\n  handleRemoveFromCart(id) {\n    let shoppingCart = cloneDeep(this.state.shoppingCart)\n    shoppingCart[id]--\n    if (shoppingCart[id] === 0) {\n      delete (shoppingCart[id])\n    }\n    this.setState({\n      shoppingCart\n    }, () => {\n      this.handleTotalBill()\n    })\n  }\n\n  handleTotalBill() {\n    let { amount = 0 } = this.state\n    let tempShoppingCart = cloneDeep(this.state.shoppingCart)\n    let totalAmount = 0\n    let getDiscount = function (count) {\n      switch (count) {\n        case 2:\n          return 5;\n        case 3:\n          return 10;\n        case 4:\n          return 20;\n        case 5:\n          return 25;\n        default:\n          return 0;\n      }\n    }\n    while (Object.keys(tempShoppingCart).length > 0) {\n      let differentBooksCount = 0\n      for (let book in tempShoppingCart) {\n        differentBooksCount++\n        tempShoppingCart[book]--\n        if (tempShoppingCart[book] === 0) {\n          delete (tempShoppingCart[book])\n        }\n      }\n      amount = this.baseFare * differentBooksCount\n      if (differentBooksCount > 1) {\n        amount -= (getDiscount(differentBooksCount) / 100 * amount)\n      }\n      totalAmount += amount\n    }\n    this.setState({\n      amount: totalAmount\n    })\n  }\n\n  render() {\n    let { shoppingCart, amount } = this.state\n    let totalBooksCount = sum(values(shoppingCart))\n    let totalDiscount = this.baseFare * totalBooksCount - amount\n    return (\n      <div className=\"bookStore\">\n        <nav>\n          <h1>Purva's Book Shop</h1>\n        </nav>\n        {/* <div className=\"bookStore-offer\">\n          <h3>UPTO 25% discount</h3>\n          <h2>BIG SALE</h2>\n          <div>*Terms and Conditions applied</div>\n        </div> */}\n        <div className=\"bookStore-container\">\n          <div className=\"bookStore-list\">\n            {\n              map(this.books, (book) => {\n                return (\n                  <div className=\"bookStore-list-item\" key={book.id}>\n                    <ListItem\n                      book={book}\n                      handleAddToCart={this.handleAddToCart}\n                      handleRemoveFromCart={this.handleRemoveFromCart}\n                      shoppingCartValue={shoppingCart[book.id]}\n                    />\n                  </div>\n                )\n              })\n            }\n          </div>\n          <div className=\"bookStore-shoppingCart\">\n            {\n              Object.keys(shoppingCart).length > 0 ? <React.Fragment>\n                <h3>SHOPPING CART</h3>\n                {\n                  map(shoppingCart, (count, bookId) => {\n                    return (\n                      <div key={bookId} className=\"bookStore-shoppingCart-item\">\n                        <div>{get(find(this.books, ['id', bookId]), 'title', '')}</div>\n                        <div>{count}</div>\n                      </div>\n                    )\n                  })\n                }\n                <div className=\"bookStore-totalBill\">\n                  {\n                    totalDiscount > 0 && <React.Fragment>\n                      <div className=\"bookStore-totalBill-item\">\n                        <div>Total Amount:</div>\n                        <div>$ {(this.baseFare * totalBooksCount).toFixed(2)}</div>\n                      </div>\n                      <div className=\"bookStore-totalBill-item\">\n                        <div>Discount:</div>\n                        <div>- $ {totalDiscount.toFixed(2)}</div>\n                      </div>\n                    </React.Fragment>\n                  }\n                  <div className=\"bookStore-totalBill-item finalAmount\">\n                    <div>Final Amount:</div>\n                    <div>$ {amount.toFixed(2)}</div>\n                  </div>\n                </div>\n              </React.Fragment> :\n                <div>Your cart is empty!</div>\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default BookStore\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}